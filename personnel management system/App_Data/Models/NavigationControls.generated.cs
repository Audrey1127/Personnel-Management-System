//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.10.102
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

namespace Umbraco.Web.PublishedContentModels
{
	// Mixin content Type 1079 with alias "navigationControls"
	/// <summary>Navigation Controls</summary>
	public partial interface INavigationControls : IPublishedContent
	{
		/// <summary>Disable Dropdown</summary>
		bool DisableDropdown { get; }

		/// <summary>Text Only In Navigation</summary>
		bool TextOnlyInNavigation { get; }

		/// <summary>Umbraco Navi Hide</summary>
		bool UmbracoNaviHide { get; }
	}

	/// <summary>Navigation Controls</summary>
	[PublishedContentModel("navigationControls")]
	public partial class NavigationControls : PublishedContentModel, INavigationControls
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "navigationControls";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public NavigationControls(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<NavigationControls, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Disable Dropdown: Tick this box if you want to disable the dropdown for this item
		///</summary>
		[ImplementPropertyType("disableDropdown")]
		public bool DisableDropdown
		{
			get { return GetDisableDropdown(this); }
		}

		/// <summary>Static getter for Disable Dropdown</summary>
		public static bool GetDisableDropdown(INavigationControls that) { return that.GetPropertyValue<bool>("disableDropdown"); }

		///<summary>
		/// Text Only In Navigation: Tick this box if you want this item to be just text only in the navigation menu.
		///</summary>
		[ImplementPropertyType("textOnlyInNavigation")]
		public bool TextOnlyInNavigation
		{
			get { return GetTextOnlyInNavigation(this); }
		}

		/// <summary>Static getter for Text Only In Navigation</summary>
		public static bool GetTextOnlyInNavigation(INavigationControls that) { return that.GetPropertyValue<bool>("textOnlyInNavigation"); }

		///<summary>
		/// Umbraco Navi Hide: Tick this box if you want to hide it from the site.
		///</summary>
		[ImplementPropertyType("umbracoNaviHide")]
		public bool UmbracoNaviHide
		{
			get { return GetUmbracoNaviHide(this); }
		}

		/// <summary>Static getter for Umbraco Navi Hide</summary>
		public static bool GetUmbracoNaviHide(INavigationControls that) { return that.GetPropertyValue<bool>("umbracoNaviHide"); }
	}
}
