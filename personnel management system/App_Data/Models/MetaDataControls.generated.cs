//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.10.102
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

namespace Umbraco.Web.PublishedContentModels
{
	// Mixin content Type 1078 with alias "metaDataControls"
	/// <summary>Meta Data Controls</summary>
	public partial interface IMetaDataControls : IPublishedContent
	{
		/// <summary>Meta Description</summary>
		string MetaDescription { get; }

		/// <summary>Meta Keywords</summary>
		IEnumerable<string> MetaKeywords { get; }

		/// <summary>Meta Name</summary>
		string MetaName { get; }
	}

	/// <summary>Meta Data Controls</summary>
	[PublishedContentModel("metaDataControls")]
	public partial class MetaDataControls : PublishedContentModel, IMetaDataControls
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "metaDataControls";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public MetaDataControls(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<MetaDataControls, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Meta Description: Enter the meta description. This is what shows up in Google etc. If left blank, will use the page name.
		///</summary>
		[ImplementPropertyType("metaDescription")]
		public string MetaDescription
		{
			get { return GetMetaDescription(this); }
		}

		/// <summary>Static getter for Meta Description</summary>
		public static string GetMetaDescription(IMetaDataControls that) { return that.GetPropertyValue<string>("metaDescription"); }

		///<summary>
		/// Meta Keywords: Enter the meta keywords. This is used for Search Engine
		///</summary>
		[ImplementPropertyType("metaKeywords")]
		public IEnumerable<string> MetaKeywords
		{
			get { return GetMetaKeywords(this); }
		}

		/// <summary>Static getter for Meta Keywords</summary>
		public static IEnumerable<string> GetMetaKeywords(IMetaDataControls that) { return that.GetPropertyValue<IEnumerable<string>>("metaKeywords"); }

		///<summary>
		/// Meta Name: Enter the meta name. If left blank it will use the page name.
		///</summary>
		[ImplementPropertyType("metaName")]
		public string MetaName
		{
			get { return GetMetaName(this); }
		}

		/// <summary>Static getter for Meta Name</summary>
		public static string GetMetaName(IMetaDataControls that) { return that.GetPropertyValue<string>("metaName"); }
	}
}
